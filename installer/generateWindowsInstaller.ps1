$mainClass= "com.s2h.capture.App"
$appType = "msi"
$appName = "capture"
$appVersion= "1.0"
$appVendor= "soft2help"
$appDescription= "Capture image from ip camera"

$languages = @(
       [pscustomobject]@{lang='en';code='en-Us';loc='en.wxl';description="Capture image from ip camara device";license="EULA-en-US.rtf";installerDescription="The installer msi to ";installerTitle="Capture Installer"}
       [pscustomobject]@{lang='es';code='es-ES';loc='es.wxl';description="Captura una imagen desde una camara IP";license="EULA-es-ES.rtf";installerDescription="El instalador para el software ";installerTitle="Instalador de capture"}      
   )


$scriptpath = $MyInvocation.MyCommand.Path
$dirinit = Split-Path $scriptpath

cd $dirinit
Remove-Item -Recurse -Force resources-dir/main.wxs -ErrorAction SilentlyContinue
Remove-Item -Recurse -Force $appName* -ErrorAction SilentlyContinue
Remove-Item -Recurse -Force capture-image  -ErrorAction SilentlyContinue


$replaceBannerTop="$dirinit/resources-dir/images/BannerTop.bmp"
$replaceDialog="$dirinit/resources-dir/images/Dialog.bmp"

((Get-Content -path "$dirinit\resources-dir\mainTemplate.wxs" -Raw) -replace 'images/BannerTop.bmp',$replaceBannerTop) | Set-Content -Path "$dirinit\resources-dir\main.wxs"
((Get-Content -path "$dirinit\resources-dir\main.wxs" -Raw) -replace 'images/Dialog.bmp',$replaceDialog) | Set-Content -Path "$dirinit\resources-dir\main.wxs"  

# $MyApp = Get-WmiObject -Class Win32_Product | Where-Object{$_.Name -eq "$appName"}
# try{
# $MyApp.Uninstall()
# }catch{
#     Write-Host "The aplication is not installed" -fore red
# }

Write-Host "Generate jre runtime image to setup" -fore green

jlink --output capture-image `
--module-path "D:\softwarePortable\JAVA\javafx-sdk-16\jmods;C:\Program Files\Eclipse Foundation\jdk-16.0.2.7-hotspot\jmods" `
--add-modules java.base,javafx.base,javafx.controls,javafx.web,javafx.graphics,javafx.media,java.datatransfer,java.desktop,java.scripting,java.xml,jdk.jsobject,jdk.unsupported,jdk.unsupported.desktop,jdk.xml.dom,javafx.fxml,java.naming,java.sql,jdk.charsets `
--no-header-files `
--no-man-pages `
--compress=2 `
--strip-debug | out-null



$languages |foreach {
Write-Host "Generate SETUP TO $($_.lang)" -fore green

Write-Host "Delete TMP FOLDER TO FORCE GENERATE FILES TO WIX AGAIN" -fore red
Remove-Item -Recurse -Force tmp  -ErrorAction SilentlyContinue

jpackage --type $appType  -i ../target `
--main-class $mainClass --main-jar .\capture-$appVersion.jar `
--name "$appName" --app-version $appVersion `
--vendor $appVendor --description "$($_.description)" `
--resource-dir .\resources-dir\ `
--license-file .\resources-dir\licenses\$($_.license) `
--runtime-image .\capture-image `
--icon ..\src\main\resources\img\icon.ico `
--temp .\tmp\ `
--win-dir-chooser --win-shortcut --win-console `
--verbose | out-null

Write-Host "Delete MSI GENERATED BY JPACKAGE TO DO IT AGAIN WITH LIGHT (FROM WIXTOOLSET)" -fore red
Remove-Item -Recurse -Force "$appName-$($appVersion).msi"  -ErrorAction SilentlyContinue
Remove-Item -Recurse -Force $dirinit\tmp\config\MsiInstallerStrings_* -ErrorAction SilentlyContinue

Copy-Item -Path $dirinit\resources-dir\i18n\* -Destination $dirinit\tmp\config\ -PassThru | out-null

Write-Host "GENERATE MSI WITH LIGHT" -fore green


((Get-Content -path "$dirinit\tmp\wixobj\main.wixobj" -Raw) -replace 'This installer database contains the logic and data required to install',$($_.installerDescription)) | Set-Content -Path "$dirinit\tmp\wixobj\main.wixobj"
((Get-Content -path "$dirinit\tmp\wixobj\main.wixobj" -Raw) -replace 'Installation Database',$($_.installerTitle)) | Set-Content -Path "$dirinit\tmp\wixobj\main.wixobj"

& "C:\Program Files (x86)\WiX Toolset v3.11\bin\light.exe" -nologo -spdb -ext WixUtilExtension `
-out $dirinit\$appName-$($appVersion)-$($_.lang).msi -sice:ICE27 -ext WixUIExtension `
-loc $dirinit\.\tmp\config\$($_.loc) `
-cultures:$($_.code) `
-b $dirinit\.\tmp\config $dirinit\.\tmp\wixobj\main.wixobj $dirinit\.\tmp\wixobj\bundle.wixobj | out-null
	



}



#.\Capture-1.0.msi /quiet


